import sys, os
from datetime import datetime

from PyQt6.QtWidgets import (QApplication, QWidget, QVBoxLayout, QLineEdit, QListView, QPushButton, QMessageBox, QLabel,
    QTextEdit,)
from PyQt6.QtCore import QStringListModel, Qt

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config.api.api_config import ApiConfig
from utils.requests_utils import Requester




class MyApp(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()
        self.click_count = 0
        self.api_config = ApiConfig(proto='http', base_url='127.0.0.1:8000')
        self.requester = Requester(self.api_config)
        self.data_getted = False

    def initUI(self):
        self.setWindowTitle('–¢—É—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–º–µ–Ω—è–µ—à—å')
        self.setGeometry(100, 100, 400, 300)

        layout = QVBoxLayout()

        self.line_edit = QLineEdit(self)
        self.line_edit.setPlaceholderText('–¢—É—Ç —Ç–µ–∫—Å—Ç –≤–≤–µ–¥—ë—à—å')
        layout.addWidget(self.line_edit)

        # –°–æ–∑–¥–∞–µ–º QLabel –¥–ª—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
        self.placeholder_label = QLabel('–¢—É—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–º–æ—Ç—Ä–∏—à—å üëá', self)
        self.placeholder_label.setAlignment(Qt.AlignmentFlag.AlignCenter)  # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        layout.addWidget(self.placeholder_label)
        
        self.list_view = QListView(self)
        self.model = QStringListModel()
        self.list_view.setModel(self.model)
        layout.addWidget(self.list_view)
        

        self.post_button = QPushButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å POST', self)
        self.post_button.clicked.connect(self.send_post_request)
        layout.addWidget(self.post_button)

        self.get_button = QPushButton('–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (GET)', self)
        self.get_button.clicked.connect(self.send_get_request)
        layout.addWidget(self.get_button)

        self.setLayout(layout)

    def send_post_request(self):
        self.click_count += 1
        text = self.line_edit.text()
        current_time = datetime.now()
        data = {
            'text': text,
            'date': current_time.strftime('%Y-%m-%d'),
            'time': current_time.strftime('%H:%M:%S'),
            'click_count': self.click_count
        }

        try:
            response = self.requester.send_request(method='POST', router='users', endpoint='post_data', json=data)
            if response and response.get('status') == 'success':  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å
                QMessageBox.information(self, '–£—Å–ø–µ—Ö', '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!')
            else:
                QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.')
        except Exception as e:
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')

    def send_get_request(self):
        try:
            response = self.requester.send_request(method='GET', router='users', endpoint='get_users')
            
            # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f'Response from GET request: {response}')  # –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            
            if isinstance(response, dict) and 'users' in response:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç - —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á 'users'
                user_list = [f"{user['first_name']} {user['last_name']} ({user['nickname']})" for user in response['users'] if 'first_name' in user]
                self.model.setStringList(user_list)
            else:
                QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.')
                
        except Exception as e:
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')




if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = MyApp()
    ex.show()
    sys.exit(app.exec())


""" 
–ó–∞–ø—É—Å–∫:
–ü–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é frontend > app –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å python.exe ./main.py
"""